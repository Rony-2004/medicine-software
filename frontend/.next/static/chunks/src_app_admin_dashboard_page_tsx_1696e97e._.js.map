{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/project2/medicine-software/frontend/src/app/admin/dashboard/page.tsx"],"sourcesContent":["\"use client\"\nimport React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport { FaPills, FaListAlt, FaShoppingCart, FaSignOutAlt, FaCapsules } from 'react-icons/fa';\n\nconst NAV_ITEMS = [\n  { key: \"add\", label: \"Add Medicine\" },\n  { key: \"view\", label: \"View Medicines\" },\n  { key: \"orders\", label: \"Orders\" },\n];\n\nconst CATEGORIES = [\"Tablet\", \"Syrup\", \"Injection\", \"Ointment\", \"Drops\"];\nconst ORDER_STATUSES = [\"Placed\", \"Confirmed\", \"Dispatched\", \"Delivered\"];\n\n// Medicine and Order types\ninterface Medicine {\n  id: string;\n  name: string;\n  category: string;\n  price: number;\n  stock: number;\n  description: string;\n  highlights: string[];\n  images: string[]; // image URLs (object URLs)\n}\ninterface Order {\n  id: string;\n  medicineId: string;\n  medicineName: string;\n  quantity: number;\n  status: string;\n  date: string;\n}\n\nexport default function AdminDashboard() {\n  const [section, setSection] = useState(\"add\");\n\n  // Shared state\n  const [medicines, setMedicines] = useState<Medicine[]>([]);\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [allMedicineNames, setAllMedicineNames] = useState<string[]>([]);\n\n  // Add Medicine state\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(CATEGORIES[0]);\n  const [price, setPrice] = useState(\"\");\n  const [stock, setStock] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [highlights, setHighlights] = useState<string[]>([\"\"]);\n  const [imagePreviews, setImagePreviews] = useState<string[]>([]);\n  const [nameSuggestions, setNameSuggestions] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  // Edit modal state\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editIdx, setEditIdx] = useState<number | null>(null);\n  const [editForm, setEditForm] = useState<Partial<Medicine>>({});\n  // Delete confirmation state\n  const [deleteId, setDeleteId] = useState<string | null>(null);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n\n  // Order state\n  const [orderMedicineId, setOrderMedicineId] = useState(\"\");\n  const [orderQuantity, setOrderQuantity] = useState(1);\n  const [orderError, setOrderError] = useState(\"\");\n\n  // --- Add Medicine Logic ---\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n    const files = Array.from(e.target.files).slice(0, 3);\n    setImagePreviews(files.map((file) => URL.createObjectURL(file)));\n  };\n\n  const handleHighlightChange = (idx: number, value: string) => {\n    setHighlights((prev) => prev.map((h, i) => (i === idx ? value : h)));\n  };\n  const addHighlight = () => setHighlights((prev) => [...prev, \"\"]);\n  const removeHighlight = (idx: number) => setHighlights((prev) => prev.filter((_, i) => i !== idx));\n\n  // Autocomplete for medicine name\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setName(value);\n    if (value.length > 0) {\n      const matches = allMedicineNames.filter((n) => n.toLowerCase().includes(value.toLowerCase()));\n      setNameSuggestions(matches);\n      setShowSuggestions(matches.length > 0);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n  const handleSuggestionClick = (suggestion: string) => {\n    setName(suggestion);\n    setShowSuggestions(false);\n  };\n\n  // Add Medicine submit\n  const handleAddMedicine = async (e: FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('category', category);\n    formData.append('price', price);\n    formData.append('stock_quantity', stock);\n    formData.append('description', description);\n    highlights.forEach((h, idx) => formData.append(`highlights[${idx}]`, h));\n    const imageInput = document.getElementById('medicine-image') as HTMLInputElement | null;\n    if (imagePreviews.length > 0 && imageInput && imageInput.files && imageInput.files[0]) {\n      formData.append('image', imageInput.files[0]);\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const API_BASE = process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:5000\";\n      const response = await fetch(`${API_BASE}/api/products`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          ...(token ? { Authorization: `Bearer ${token}` } : {})\n        },\n      });\n      if (response.ok) {\n        setAllMedicineNames((prev: string[]) => [...prev, name]);\n        setName(\"\");\n        setCategory(CATEGORIES[0]);\n        setPrice(\"\");\n        setStock(\"\");\n        setDescription(\"\");\n        setHighlights([\"\"]);\n        setImagePreviews([]);\n        alert('Medicine added successfully!');\n      } else {\n        const data = await response.json();\n        alert(data.message || 'Failed to add medicine');\n      }\n    } catch {\n      alert('Network error. Please try again.');\n    }\n  };\n\n  // --- View Medicines Logic ---\n  const handleDeleteMedicine = (id: string) => {\n    setDeleteId(id);\n    setShowDeleteDialog(true);\n  };\n  const confirmDeleteMedicine = () => {\n    if (deleteId) setMedicines((prev) => prev.filter((m) => m.id !== deleteId));\n    setShowDeleteDialog(false);\n    setDeleteId(null);\n  };\n\n  // Edit logic\n  const openEditModal = (idx: number) => {\n    setEditIdx(idx);\n    setEditForm({ ...medicines[idx] });\n    setEditModalOpen(true);\n  };\n  const closeEditModal = () => {\n    setEditModalOpen(false);\n    setEditIdx(null);\n    setEditForm({});\n  };\n  const handleEditFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setEditForm((prev) => ({ ...prev, [name]: name === 'price' || name === 'stock' ? Number(value) : value }));\n  };\n  const handleEditHighlightsChange = (idx: number, value: string) => {\n    setEditForm((prev) => ({\n      ...prev,\n      highlights: prev.highlights?.map((h, i) => (i === idx ? value : h)) || [],\n    }));\n  };\n  const addEditHighlight = () => {\n    setEditForm((prev) => ({\n      ...prev,\n      highlights: [...(prev.highlights || []), ''],\n    }));\n  };\n  const removeEditHighlight = (idx: number) => {\n    setEditForm((prev) => ({\n      ...prev,\n      highlights: (prev.highlights || []).filter((_, i) => i !== idx),\n    }));\n  };\n  const handleEditImageChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n    const files = Array.from(e.target.files).slice(0, 3);\n    setEditForm((prev) => ({\n      ...prev,\n      images: files.map((file) => URL.createObjectURL(file)),\n    }));\n  };\n  const handleEditSave = (e: FormEvent) => {\n    e.preventDefault();\n    if (editIdx === null) return;\n    setMedicines((prev) =>\n      prev.map((m, i) => (i === editIdx ? { ...m, ...editForm, highlights: (editForm.highlights || []).filter((h) => h.trim()) } : m))\n    );\n    closeEditModal();\n  };\n\n  // --- Orders Logic ---\n  const handlePlaceOrder = (e: FormEvent) => {\n    e.preventDefault();\n    setOrderError(\"\");\n    if (!orderMedicineId) {\n      setOrderError(\"Select a medicine\");\n      return;\n    }\n    const medIdx = medicines.findIndex((m) => m.id === orderMedicineId);\n    if (medIdx === -1) {\n      setOrderError(\"Medicine not found\");\n      return;\n    }\n    if (orderQuantity < 1) {\n      setOrderError(\"Quantity must be at least 1\");\n      return;\n    }\n    if (medicines[medIdx].stock < orderQuantity) {\n      setOrderError(\"Not enough stock\");\n      return;\n    }\n    // Place order\n    const newOrder: Order = {\n      id: Date.now().toString(),\n      medicineId: orderMedicineId,\n      medicineName: medicines[medIdx].name,\n      quantity: orderQuantity,\n      status: ORDER_STATUSES[0],\n      date: new Date().toLocaleString(),\n    };\n    setOrders((prev) => [...prev, newOrder]);\n    // Decrease stock\n    setMedicines((prev) =>\n      prev.map((m, i) =>\n        i === medIdx ? { ...m, stock: m.stock - orderQuantity } : m\n      )\n    );\n    setOrderMedicineId(\"\");\n    setOrderQuantity(1);\n    setOrderError(\"\");\n    alert(\"Order placed!\");\n  };\n\n  const handleOrderStatusChange = (orderId: string, status: string) => {\n    setOrders((prev) =>\n      prev.map((o) => (o.id === orderId ? { ...o, status } : o))\n    );\n  };\n\n  return (\n    <div className=\"fixed inset-0 w-screen h-screen flex bg-gray-50 overflow-hidden\">\n      <div className=\"w-full h-full flex flex-col md:flex-row overflow-hidden\">\n        {/* Sidebar */}\n        <aside className=\"w-full md:w-56 bg-gradient-to-b from-blue-700 to-green-400 text-white flex flex-col min-h-[64px] md:min-h-full h-full border-r border-blue-200 shadow-lg z-10\">\n          <div className=\"flex flex-col items-center py-8\">\n            <div className=\"bg-white rounded-full p-2 shadow-md mb-2\">\n              <FaCapsules className=\"text-3xl text-blue-600\" />\n            </div>\n            <span className=\"text-xl font-extrabold tracking-wide\">MediStore</span>\n            <span className=\"text-xs text-blue-100 mt-1\">Admin Panel</span>\n          </div>\n          <nav className=\"flex flex-col gap-1 mt-2 flex-grow\">\n            {NAV_ITEMS.map((item) => (\n              <button\n                key={item.key}\n                className={`flex items-center gap-3 text-left pl-6 pr-4 py-3 text-base font-semibold transition-all duration-200 focus:outline-none\n                ${section === item.key\n                  ? \"bg-white text-blue-700 font-bold shadow-md\"\n                  : \"text-white hover:bg-blue-400/60\"}\n                `}\n                style={{ borderRadius: 8 }}\n                onClick={() => setSection(item.key)}\n              >\n                {item.key === 'add' && <FaPills className=\"text-lg\" />}\n                {item.key === 'view' && <FaListAlt className=\"text-lg\" />}\n                {item.key === 'orders' && <FaShoppingCart className=\"text-lg\" />}\n                {item.label}\n              </button>\n            ))}\n          </nav>\n          <div className=\"mt-auto flex flex-col gap-2 pb-6 px-4\">\n          <button\n              className=\"w-full py-2 rounded-lg bg-gradient-to-r from-blue-600 to-green-400 text-white font-bold text-base flex items-center justify-center gap-2 hover:from-blue-700 hover:to-green-500 transition shadow-md\"\n              onClick={() => { window.location.href = '/'; }}\n          >\n              <FaSignOutAlt className=\"inline-block text-lg\" /> Logout\n          </button>\n          </div>\n        </aside>\n        {/* Main Content */}\n        <main className=\"flex-1 bg-gradient-to-br from-blue-100 to-green-50 overflow-auto px-4 py-8 flex flex-col items-start min-h-screen\">\n          {section === \"add\" && (\n            <div className=\"animate-fade-in w-full max-w-2xl mx-auto flex flex-col gap-6 min-h-0\">\n              <div className=\"flex items-center gap-4 mb-2 mt-2\">\n                <div className=\"w-2 h-10 rounded bg-gradient-to-b from-blue-500 to-green-400 shadow-md\"></div>\n                <h1 className=\"text-4xl font-extrabold tracking-wide bg-gradient-to-r from-blue-700 via-blue-500 to-green-400 bg-clip-text text-transparent drop-shadow-lg\">Add Medicine</h1>\n              </div>\n              <div className=\"text-gray-500 text-base mb-6 ml-6\">Fill the form below to add a new medicine to your inventory.</div>\n              <form onSubmit={handleAddMedicine} className=\"space-y-8 w-full bg-white rounded-2xl shadow-lg border border-blue-100 p-8 flex flex-col\">\n                {/* Images */}\n                <div>\n                  <label className=\"block font-semibold mb-2\">Product Images (max 3)</label>\n                  <input\n                    id=\"medicine-image\"\n                    type=\"file\"\n                    name=\"image\"\n                    accept=\"image/*\"\n                    multiple={false}\n                    onChange={handleImageChange}\n                    title=\"Upload product images\"\n                    className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-100 file:text-blue-700 hover:file:bg-blue-200 transition\"\n                  />\n                  <div className=\"flex gap-4 mt-2\">\n                    {imagePreviews.map((src, idx) => (\n                      <img\n                        key={idx}\n                        src={src}\n                        alt={`Preview ${idx + 1}`}\n                        className=\"w-20 h-20 object-cover rounded-lg shadow border border-blue-200\"\n            />\n                    ))}\n                  </div>\n        </div>\n                {/* Name & Category */}\n                <div className=\"flex gap-4\">\n                  <div className=\"flex-1 relative\">\n                    <label className=\"block font-semibold mb-1\" htmlFor=\"name\">Medicine Name</label>\n          <input\n                      id=\"name\"\n                      className=\"w-full border rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-400 bg-blue-50 placeholder:text-blue-300 text-lg transition\"\n            value={name}\n                      onChange={handleNameChange}\n                      onFocus={() => name && nameSuggestions.length > 0 && setShowSuggestions(true)}\n                      onBlur={() => setTimeout(() => setShowSuggestions(false), 100)}\n                      autoComplete=\"off\"\n            required\n          />\n                    {showSuggestions && (\n                      <ul className=\"absolute z-10 left-0 right-0 bg-white border border-gray-200 rounded shadow mt-1 max-h-40 overflow-y-auto\">\n                        {nameSuggestions.map((suggestion, idx) => (\n                          <li\n                            key={idx}\n                            className=\"px-3 py-2 cursor-pointer hover:bg-blue-100\"\n                            onClick={() => handleSuggestionClick(suggestion)}\n                          >\n                            {suggestion}\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                  </div>\n                  <div className=\"w-48\">\n                    <label className=\"block font-semibold mb-1\" htmlFor=\"category\">Category</label>\n                    <select\n                      id=\"category\"\n                      className=\"w-full border rounded-lg px-4 py-3 bg-blue-50 text-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition\"\n            value={category}\n            onChange={e => setCategory(e.target.value)}\n                    >\n                      {CATEGORIES.map(cat => <option key={cat}>{cat}</option>)}\n                    </select>\n                  </div>\n                </div>\n                {/* Price & Stock */}\n                <div className=\"flex gap-4\">\n                  <div className=\"flex-1\">\n                    <label className=\"block font-semibold mb-1\" htmlFor=\"price\">Price</label>\n          <input\n                      id=\"price\"\n            type=\"number\"\n                      min=\"0\"\n                      className=\"w-full border rounded-lg px-4 py-3 bg-blue-50 text-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition\"\n            value={price}\n            onChange={e => setPrice(e.target.value)}\n            required\n          />\n                  </div>\n                  <div className=\"flex-1\">\n                    <label className=\"block font-semibold mb-1\" htmlFor=\"stock\">Stock Quantity</label>\n          <input\n                      id=\"stock\"\n            type=\"number\"\n                      min=\"0\"\n                      className=\"w-full border rounded-lg px-4 py-3 bg-blue-50 text-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition\"\n            value={stock}\n            onChange={e => setStock(e.target.value)}\n            required\n          />\n        </div>\n                </div>\n                {/* Description */}\n                <div>\n                  <label className=\"block font-semibold mb-1\" htmlFor=\"description\">Description</label>\n        <textarea\n                    id=\"description\"\n                    className=\"w-full border rounded-lg px-4 py-3 bg-blue-50 text-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          rows={3}\n                  />\n                </div>\n                {/* Key Highlights */}\n                <div>\n                  <label className=\"block font-semibold mb-2\">Key Highlights</label>\n                  <div className=\"space-y-2\">\n                    {highlights.map((h, idx) => (\n                      <div key={idx} className=\"flex gap-2 items-center\">\n                        <input\n                          className=\"flex-1 border rounded-lg px-4 py-3 bg-blue-50 text-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition\"\n                          value={h}\n                          onChange={e => handleHighlightChange(idx, e.target.value)}\n                          placeholder={`Highlight ${idx + 1}`}\n          required\n        />\n                        {highlights.length > 1 && (\n                          <button\n                            type=\"button\"\n                            className=\"text-red-500 hover:text-red-700 text-lg font-bold px-2\"\n                            onClick={() => removeHighlight(idx)}\n                            aria-label=\"Remove highlight\"\n                          >\n                            ×\n                          </button>\n                        )}\n                      </div>\n                    ))}\n                    <button\n                      type=\"button\"\n                      className=\"mt-2 px-4 py-2 bg-gradient-to-r from-blue-500 to-green-400 text-white rounded-lg font-semibold hover:from-blue-600 hover:to-green-500 transition shadow\"\n                      onClick={addHighlight}\n                    >\n                      <span className=\"inline-block mr-1\">+</span> Add Highlight\n                    </button>\n                  </div>\n                </div>\n                {/* Submit */}\n              <div className=\"pt-4\">\n                <button\n                  type=\"submit\"\n                  className=\"w-full py-3 bg-gradient-to-r from-blue-600 to-green-400 text-white font-bold rounded-xl shadow-lg text-lg hover:from-blue-700 hover:to-green-500 transition\"\n                >\n                  <FaPills className=\"inline-block mr-2\" /> Add Medicine\n                </button>\n              </div>\n      </form>\n            </div>\n          )}\n          {section === \"view\" && (\n            <div className=\"animate-fade-in w-full max-w-5xl mx-auto px-4 mt-4\">\n              <div className=\"flex items-center gap-4 mb-2 mt-2\">\n                <div className=\"w-2 h-10 rounded bg-gradient-to-b from-blue-500 to-green-400 shadow-md\"></div>\n                <h1 className=\"text-4xl font-extrabold tracking-wide bg-gradient-to-r from-blue-700 via-blue-500 to-green-400 bg-clip-text text-transparent drop-shadow-lg\">View Medicines</h1>\n              </div>\n              <div className=\"text-gray-500 text-base mb-6 ml-6\">Browse, edit, or remove medicines from your inventory.</div>\n              <div className=\"overflow-x-auto w-full bg-white rounded-2xl shadow-lg border border-blue-100 p-4\">\n                <table className=\"w-full text-base\">\n                  <thead>\n                    <tr className=\"bg-blue-100\">\n                      <th className=\"py-2 px-4\">Images</th>\n                      <th className=\"py-2 px-4\">Name</th>\n                      <th className=\"py-2 px-4\">Category</th>\n                      <th className=\"py-2 px-4\">Price</th>\n                      <th className=\"py-2 px-4\">Stock</th>\n                      <th className=\"py-2 px-4\">Highlights</th>\n                      <th className=\"py-2 px-4\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {medicines.length === 0 && (\n                      <tr>\n                        <td colSpan={7} className=\"text-center py-8 text-gray-400 text-lg\">No medicines added yet.</td>\n                      </tr>\n                    )}\n                    {medicines.map((med, idx) => (\n                      <tr key={med.id} className={\"border-t transition \" + (idx % 2 === 0 ? \"bg-blue-50/40\" : \"bg-white\") + \" hover:bg-blue-100/60\"}>\n                        <td className=\"py-2 px-4\">\n                          <div className=\"flex gap-2\">\n                            {med.images.map((img, idx) => (\n                              <img key={idx} src={img} alt={med.name} className=\"w-10 h-10 object-cover rounded\" />\n                            ))}\n                          </div>\n                        </td>\n                        <td className=\"py-2 px-4 font-medium\">{med.name}</td>\n                        <td className=\"py-2 px-4\">{med.category}</td>\n                        <td className=\"py-2 px-4\">₹{med.price}</td>\n                        <td className=\"py-2 px-4\">{med.stock}</td>\n                        <td className=\"py-2 px-4\">\n                          <ul className=\"list-disc ml-4 text-sm text-gray-700\">\n                            {med.highlights.map((h, i) => <li key={i}>{h}</li>)}\n                          </ul>\n                        </td>\n                        <td className=\"py-2 px-4\">\n                          <div className=\"flex gap-2\">\n                            <button\n                              className=\"px-3 py-1 bg-yellow-400 text-white rounded hover:bg-yellow-500 transition\"\n                              onClick={() => openEditModal(idx)}\n                            >Edit</button>\n                            <button\n                              className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition\"\n                              onClick={() => handleDeleteMedicine(med.id)}\n                            >Delete</button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n          {section === \"orders\" && (\n            <div className=\"animate-fade-in w-full max-w-5xl mx-auto px-4 mt-4\">\n              <div className=\"flex items-center gap-4 mb-2 mt-2\">\n                <div className=\"w-2 h-10 rounded bg-gradient-to-b from-blue-500 to-green-400 shadow-md\"></div>\n                <h1 className=\"text-4xl font-extrabold tracking-wide bg-gradient-to-r from-blue-700 via-blue-500 to-green-400 bg-clip-text text-transparent drop-shadow-lg\">Orders</h1>\n              </div>\n              <div className=\"text-gray-500 text-base mb-6 ml-6\">Manage and track all customer orders here.</div>\n              {/* Place Order */}\n              <form onSubmit={handlePlaceOrder} className=\"mb-8 flex gap-4 items-end flex-wrap\">\n                <div className=\"flex-1 min-w-[200px]\">\n                  <label className=\"block font-semibold mb-1\" htmlFor=\"order-medicine\">Medicine</label>\n                  <select\n                    id=\"order-medicine\"\n                    className=\"w-full border rounded px-3 py-2\"\n                    value={orderMedicineId}\n                    onChange={e => setOrderMedicineId(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Select Medicine</option>\n                    {medicines.map((m) => (\n                      <option key={m.id} value={m.id}>{m.name} (Stock: {m.stock})</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"w-32\">\n                  <label className=\"block font-semibold mb-1\" htmlFor=\"order-qty\">Quantity</label>\n                  <input\n                    id=\"order-qty\"\n                    type=\"number\"\n                    min={1}\n                    className=\"w-full border rounded px-3 py-2\"\n                    value={orderQuantity}\n                    onChange={e => setOrderQuantity(Number(e.target.value))}\n                    required\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md transition-all duration-300 hover:bg-gradient-to-r hover:from-blue-500 hover:to-green-400 hover:scale-105 hover:shadow-lg focus:outline-none\"\n                >\n                  Place Order\n                </button>\n                {orderError && <div className=\"text-red-500 font-semibold ml-4\">{orderError}</div>}\n              </form>\n              {/* Orders Table */}\n              <div className=\"overflow-x-auto w-full bg-white rounded-2xl shadow-lg border border-blue-100 p-4\">\n                <table className=\"w-full text-base\">\n                  <thead>\n                    <tr className=\"bg-blue-100\">\n                      <th className=\"py-2 px-4\">Order ID</th>\n                      <th className=\"py-2 px-4\">Medicine</th>\n                      <th className=\"py-2 px-4\">Quantity</th>\n                      <th className=\"py-2 px-4\">Status</th>\n                      <th className=\"py-2 px-4\">Date</th>\n                      <th className=\"py-2 px-4\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {orders.length === 0 && (\n                      <tr>\n                        <td colSpan={6} className=\"text-center py-8 text-gray-400 text-lg\">No orders placed yet.</td>\n                      </tr>\n                    )}\n                    {orders.map((order, idx) => (\n                      <tr key={order.id} className={\"border-t transition \" + (idx % 2 === 0 ? \"bg-blue-50/40\" : \"bg-white\") + \" hover:bg-blue-100/60\"}>\n                        <td className=\"py-2 px-4\">{order.id}</td>\n                        <td className=\"py-2 px-4\">{order.medicineName}</td>\n                        <td className=\"py-2 px-4\">{order.quantity}</td>\n                        <td className=\"py-2 px-4\">\n                          <select\n                            className=\"border rounded px-2 py-1\"\n                            value={order.status}\n                            onChange={e => handleOrderStatusChange(order.id, e.target.value)}\n                            title=\"Order Status\"\n                          >\n                            {ORDER_STATUSES.map((s) => <option key={s}>{s}</option>)}\n                          </select>\n                        </td>\n                        <td className=\"py-2 px-4 text-xs\">{order.date}</td>\n                        <td className=\"py-2 px-4\">-</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </main>\n      </div>\n      {/* Edit Medicine Modal */}\n      {editModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-xl shadow-lg p-8 w-full max-w-lg animate-fade-in\">\n            <h2 className=\"text-2xl font-bold mb-4\">Edit Medicine</h2>\n            <form onSubmit={handleEditSave} className=\"space-y-4\">\n              <div className=\"flex gap-4\">\n                <div className=\"flex-1\">\n                  <label className=\"block font-semibold mb-1\" htmlFor=\"edit-name\">Medicine Name</label>\n                  <input\n                    id=\"edit-name\"\n                    name=\"name\"\n                    className=\"w-full border rounded px-3 py-2\"\n                    value={editForm.name || ''}\n                    onChange={handleEditFormChange}\n                    required\n                  />\n                </div>\n                <div className=\"w-48\">\n                  <label className=\"block font-semibold mb-1\" htmlFor=\"edit-category\">Category</label>\n                  <select\n                    id=\"edit-category\"\n                    name=\"category\"\n                    className=\"w-full border rounded px-3 py-2\"\n                    value={editForm.category || CATEGORIES[0]}\n                    onChange={handleEditFormChange}\n                  >\n                    {CATEGORIES.map(cat => <option key={cat}>{cat}</option>)}\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-1\">\n                  <label className=\"block font-semibold mb-1\" htmlFor=\"edit-price\">Price</label>\n                  <input\n                    id=\"edit-price\"\n                    name=\"price\"\n                    type=\"number\"\n                    min=\"0\"\n                    className=\"w-full border rounded px-3 py-2\"\n                    value={editForm.price || ''}\n                    onChange={handleEditFormChange}\n                    required\n                  />\n                </div>\n                <div className=\"flex-1\">\n                  <label className=\"block font-semibold mb-1\" htmlFor=\"edit-stock\">Stock Quantity</label>\n                  <input\n                    id=\"edit-stock\"\n                    name=\"stock\"\n                    type=\"number\"\n                    min=\"0\"\n                    className=\"w-full border rounded px-3 py-2\"\n                    value={editForm.stock || ''}\n                    onChange={handleEditFormChange}\n                    required\n                  />\n                </div>\n              </div>\n              <div>\n                <label className=\"block font-semibold mb-1\" htmlFor=\"edit-description\">Description</label>\n                <textarea\n                  id=\"edit-description\"\n                  name=\"description\"\n                  className=\"w-full border rounded px-3 py-2\"\n                  value={editForm.description || ''}\n                  onChange={handleEditFormChange}\n                  rows={3}\n                />\n              </div>\n              <div>\n                <label className=\"block font-semibold mb-2\">Key Highlights</label>\n                <div className=\"space-y-2\">\n                  {(editForm.highlights || []).map((h, idx) => (\n                    <div key={idx} className=\"flex gap-2 items-center\">\n                      <input\n                        className=\"flex-1 border rounded px-3 py-2\"\n                        value={h}\n                        onChange={e => handleEditHighlightsChange(idx, e.target.value)}\n                        placeholder={`Highlight ${idx + 1}`}\n                        required\n                      />\n                      {(editForm.highlights || []).length > 1 && (\n                        <button\n                          type=\"button\"\n                          className=\"text-red-500 hover:text-red-700 text-lg font-bold px-2\"\n                          onClick={() => removeEditHighlight(idx)}\n                          aria-label=\"Remove highlight\"\n                        >\n                          ×\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                  <button\n                    type=\"button\"\n                    className=\"mt-2 px-4 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition\"\n                    onClick={addEditHighlight}\n                  >\n                    + Add Highlight\n                  </button>\n                </div>\n              </div>\n              <div>\n                <label className=\"block font-semibold mb-2\">Product Images (max 3)</label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  multiple\n                  onChange={handleEditImageChange}\n                  title=\"Upload product images\"\n                  className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                />\n                <div className=\"flex gap-4 mt-2\">\n                  {(editForm.images || []).map((src, idx) => (\n                    <img\n                      key={idx}\n                      src={src}\n                      alt={`Preview ${idx + 1}`}\n                      className=\"w-16 h-16 object-cover rounded shadow border\"\n                    />\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex gap-4 mt-4\">\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md transition-all duration-300 hover:bg-gradient-to-r hover:from-blue-500 hover:to-green-400 hover:scale-105 hover:shadow-lg focus:outline-none\"\n                >\n                  Save Changes\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition\"\n                  onClick={closeEditModal}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n      {/* Delete Confirmation Dialog */}\n      {showDeleteDialog && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-xl shadow-lg p-8 w-full max-w-xs animate-fade-in\">\n            <h2 className=\"text-xl font-bold mb-4\">Delete Medicine?</h2>\n            <p className=\"mb-6\">Are you sure you want to delete this medicine?</p>\n            <div className=\"flex gap-4\">\n              <button\n                className=\"px-6 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition\"\n                onClick={confirmDeleteMedicine}\n              >\n                Delete\n              </button>\n              <button\n                className=\"px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition\"\n                onClick={() => setShowDeleteDialog(false)}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}