{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///D:/project2/medicine-software/frontend/src/app/NavLink.tsx"],"sourcesContent":["\"use client\";\r\nimport Link from \"next/link\";\r\nimport React from \"react\";\r\n\r\nexport default function NavLink({ href, children }: { href: string; children: React.ReactNode }) {\r\n  const [hover, setHover] = React.useState(false);\r\n  return (\r\n    <Link\r\n      href={href}\r\n      style={{\r\n        color: '#fff',\r\n        textDecoration: 'none',\r\n        fontWeight: 600,\r\n        fontSize: 18,\r\n        letterSpacing: 0.5,\r\n        padding: '8px 0',\r\n        borderBottom: hover ? '3px solid #43cea2' : '3px solid transparent',\r\n        transition: 'border 0.25s cubic-bezier(.4,2,.6,1), color 0.2s',\r\n        cursor: 'pointer',\r\n        display: 'inline-block',\r\n        position: 'relative',\r\n        background: 'none',\r\n        outline: 'none',\r\n      }}\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      tabIndex={0}\r\n    >\r\n      {children}\r\n      <span style={{\r\n        display: 'block',\r\n        height: 3,\r\n        width: '100%',\r\n        background: hover ? 'linear-gradient(90deg, #43cea2 0%, #1976d2 100%)' : 'transparent',\r\n        borderRadius: 2,\r\n        position: 'absolute',\r\n        left: 0,\r\n        bottom: -3,\r\n        transition: 'background 0.25s cubic-bezier(.4,2,.6,1)',\r\n      }} />\r\n    </Link>\r\n  );\r\n} "],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAA+C;IAC7F,MAAM,CAAC,OAAO,SAAS,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACzC,qBACE,8OAAC,4JAAA,CAAA,UAAI;QACH,MAAM;QACN,OAAO;YACL,OAAO;YACP,gBAAgB;YAChB,YAAY;YACZ,UAAU;YACV,eAAe;YACf,SAAS;YACT,cAAc,QAAQ,sBAAsB;YAC5C,YAAY;YACZ,QAAQ;YACR,SAAS;YACT,UAAU;YACV,YAAY;YACZ,SAAS;QACX;QACA,cAAc,IAAM,SAAS;QAC7B,cAAc,IAAM,SAAS;QAC7B,UAAU;;YAET;0BACD,8OAAC;gBAAK,OAAO;oBACX,SAAS;oBACT,QAAQ;oBACR,OAAO;oBACP,YAAY,QAAQ,qDAAqD;oBACzE,cAAc;oBACd,UAAU;oBACV,MAAM;oBACN,QAAQ,CAAC;oBACT,YAAY;gBACd;;;;;;;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///D:/project2/medicine-software/frontend/src/app/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\ntype AuthType = \"user\" | \"admin\" | null;\r\ninterface AuthContextType {\r\n  auth: AuthType;\r\n  login: (type: AuthType) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  auth: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [auth, setAuth] = useState<AuthType>(null);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"authType\");\r\n    if (stored === \"user\" || stored === \"admin\") setAuth(stored);\r\n  }, []);\r\n\r\n  const login = (type: AuthType) => {\r\n    setAuth(type);\r\n    if (type) localStorage.setItem(\"authType\", type);\r\n    else localStorage.removeItem(\"authType\");\r\n  };\r\n  const logout = () => {\r\n    setAuth(null);\r\n    localStorage.removeItem(\"authType\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ auth, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n} "],"names":[],"mappings":";;;;;AACA;AADA;;;AAUA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,MAAM;IACN,OAAO,KAAO;IACd,QAAQ,KAAO;AACjB;AAEO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,aAAa,OAAO,CAAC;QACpC,IAAI,WAAW,UAAU,WAAW,SAAS,QAAQ;IACvD,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,IAAI,MAAM,aAAa,OAAO,CAAC,YAAY;aACtC,aAAa,UAAU,CAAC;IAC/B;IACA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;QAAO;kBAChD;;;;;;AAGP;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AACpB","debugId":null}}]
}